<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Material extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Material_model');
    }

    /*
     * Listing of materials
     */
    function index()
    {
        if (!$this->ion_auth->is_admin()) {
            // redirect them to the login page
            redirect('auth/login', 'refresh');
        } else {

            $data['materials'] = $this->Material_model->get_all_materials();

            $data['_view'] = 'material/index';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Adding a new material
     */
    function add()
    {
        if (!$this->ion_auth->is_admin()) {
            // redirect them to the login page
            redirect('auth/login', 'refresh');
        } else {

            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'task_id' => $this->input->post('task_id'),
                    'name' => $this->input->post('name'),
                    'unit' => $this->input->post('unit'),
                    'quantity' => $this->input->post('quantity'),
                    'quantity_left' => $this->input->post('quantity_left'),
                );

                $material_id = $this->Material_model->add_material($params);
                redirect('material/index');
            } else {
                $this->load->model('Task_model');
                $data['all_task'] = $this->Task_model->get_all_task();

                $data['_view'] = 'material/add';
                $this->load->view('layouts/main', $data);
            }
        }
    }

    /*
     * Editing a material
     */
    function edit($id)
    {
        if (!$this->ion_auth->is_admin()) {
            // redirect them to the login page
            redirect('auth/login', 'refresh');
        } else {

            // check if the material exists before trying to edit it
            $data['material'] = $this->Material_model->get_material($id);

            if (isset($data['material']['id'])) {
                if (isset($_POST) && count($_POST) > 0) {
                    $params = array(
                        'task_id' => $this->input->post('task_id'),
                        'name' => $this->input->post('name'),
                        'unit' => $this->input->post('unit'),
                        'quantity' => $this->input->post('quantity'),
                        'quantity_left' => $this->input->post('quantity_left'),
                    );

                    $this->Material_model->update_material($id, $params);
                    redirect('material/index');
                } else {
                    $this->load->model('Task_model');
                    $data['all_task'] = $this->Task_model->get_all_task();

                    $data['_view'] = 'material/edit';
                    $this->load->view('layouts/main', $data);
                }
            } else {
                show_error('The material you are trying to edit does not exist.');
            }
        }
    }

    /*
     * Deleting material
     */
    function remove($id)
    {
        if (!$this->ion_auth->is_admin()) {
            // redirect them to the login page
            redirect('auth/login', 'refresh');
        } else {

            $material = $this->Material_model->get_material($id);

            // check if the material exists before trying to delete it
            if (isset($material['id'])) {
                $this->Material_model->delete_material($id);
                redirect('material/index');
            } else {
                show_error('The material you are trying to delete does not exist.');
            }
        }
    }

}
